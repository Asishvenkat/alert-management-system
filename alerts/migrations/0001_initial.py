# Generated by Django 5.2.7 on 2025-10-04 13:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'User')], default='user', max_length=10)),
                ('organization', models.CharField(default='default-org', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('organization', models.CharField(default='default-org', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'teams',
                'indexes': [models.Index(fields=['organization'], name='teams_organiz_3dbaac_idx')],
                'unique_together': {('name', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('severity', models.CharField(choices=[('Info', 'Info'), ('Warning', 'Warning'), ('Critical', 'Critical')], default='Info', max_length=20)),
                ('delivery_type', models.CharField(choices=[('InApp', 'In-App'), ('Email', 'Email'), ('SMS', 'SMS')], default='InApp', max_length=20)),
                ('visibility_type', models.CharField(choices=[('Organization', 'Organization'), ('Team', 'Team'), ('User', 'User')], max_length=20)),
                ('target_organization', models.CharField(blank=True, max_length=100)),
                ('reminder_enabled', models.BooleanField(default=True)),
                ('reminder_frequency_hours', models.IntegerField(default=2)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('expiry_time', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_alerts', to=settings.AUTH_USER_MODEL)),
                ('target_users', models.ManyToManyField(blank=True, related_name='targeted_alerts', to=settings.AUTH_USER_MODEL)),
                ('target_teams', models.ManyToManyField(blank=True, related_name='alerts', to='alerts.team')),
            ],
            options={
                'db_table': 'alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='alerts.team'),
        ),
        migrations.CreateModel(
            name='UserAlertPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_snoozed', models.BooleanField(default=False)),
                ('snoozed_at', models.DateTimeField(blank=True, null=True)),
                ('snooze_until', models.DateTimeField(blank=True, null=True)),
                ('last_reminder_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_preferences', to='alerts.alert')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_alert_preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_type', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('read', 'Read')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('is_reminder', models.BooleanField(default=False)),
                ('reminder_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='alerts.alert')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'notification_deliveries',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['alert', 'user'], name='notificatio_alert_i_f293ac_idx'), models.Index(fields=['user', 'status'], name='notificatio_user_id_495627_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['is_active', 'expiry_time'], name='alerts_is_acti_9225a1_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['visibility_type'], name='alerts_visibil_cd2bb9_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['severity'], name='alerts_severit_362484_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['organization'], name='users_organiz_29ac71_idx'),
        ),
        migrations.AddIndex(
            model_name='useralertpreference',
            index=models.Index(fields=['user', 'is_read'], name='user_alert__user_id_24d2f8_idx'),
        ),
        migrations.AddIndex(
            model_name='useralertpreference',
            index=models.Index(fields=['is_snoozed', 'snooze_until'], name='user_alert__is_snoo_271236_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='useralertpreference',
            unique_together={('user', 'alert')},
        ),
    ]
